@page "/passwordgenerator"
@inherits PasswordGeneratorModel

<h1>Blazor Password Generator</h1>


<form class="form-inline">
    <table>
        <tr>
            <td>生成するパスワードの数</td>
            <td><input type="tel" maxlength="5" @bind="passwordCount" class="form-text"></td>
        </tr>
        <tr>
            <td>パスワードの文字数</td>
            <td><input type="tel" maxlength="4" @bind="passwordLength" class="form-text"></td>
        </tr>
        <tr>
            <td>使用可能文字</td>
            <td><input type="text" @bind="usableCharacters" class="form-text" style="width: 900px;" required /></td>
        </tr>
        <tr>
            <td></td>
            <td>
                <div class="form-inline">
                    <label class="checkbox"><input type="checkbox" @onchange="eventArgs => { checkboxClicked_UseUpperCase(eventArgs.Value); }" checked="checked"> 大文字</label>
                    <label class="checkbox"><input type="checkbox" @onchange="eventArgs => { checkboxClicked_UseLowerCase(eventArgs.Value); }" checked="checked"> 小文字</label>
                    <label class="checkbox"><input type="checkbox" @onchange="eventArgs => { checkboxClicked_UseNumber(eventArgs.Value); }" checked="checked"> 数字</label>
                    <label class="checkbox"><input type="checkbox" @onchange="eventArgs => { checkboxClicked_UseSpecialCharacter(eventArgs.Value); }"> 記号</label>
                </div>
            </td>
        </tr>
        <tr>
            <td>パスワードポリシー</td>
            <td>
                <div class="form-inline">
                    <label class="checkbox"><input type="checkbox" @bind="useCharacterOver3Kinds"> 英大文字・英小文字・数字・記号のうち3種類以上を含める</label>
                </div>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <div class="form-inline">
                    <label class="checkbox"><input type="checkbox" @bind="useUniqueCharacter">文字を重複しない (パスワード文字数 &lt; (使用可能文字数 / 3)の時のみ)</label>
                </div>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <div class="form-inline">
                    <label class="checkbox"><input type="checkbox" @onchange="eventArgs => { checkboxClicked_NotUseSimilarCharacter(eventArgs.Value); }"> 似通った文字（0 O o 1 I l | i j）を使用しない</label>
                </div>
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <div class="form-inline">
                    <label class="checkbox"><input type="checkbox" @bind="notStartWithExcelSpecialCharacter"> 先頭にExcelの特殊文字（+ - = ' @@  ）を使用しない</label>
                </div>
            </td>
        </tr>
    </table>
</form>

<hr />

<button class="btn btn-primary" value="Generate" @onclick="@(async () => await GeneratePasswordsAsync())" disabled="@(!generateButtonIsEnabled)">生成</button>
<button class="btn btn-primary" value="Cancel" @onclick="CancelGenerating" disabled="@(!cancelButtonIsEnabled)">中止</button>
<progress max="@progressMax" value="@passwordGeneratedCount">@(progressMax > 0 ? (passwordGeneratedCount / progressMax * 100) : 0)%</progress> @(progressMax > 0 ? $"{passwordGeneratedCount} / {progressMax}" : "")
<span class="oi oi-check" aria-hidden="true" hidden="@(!completeIconVisible)" />
<br />

<textarea @bind="generatedPasswordList" class="text-dark" style="height: 200px; width: 1100px;"></textarea>
<button class="btn btn-primary" value="ClipBoard" @onclick="@(async () => await onClipBoardButton_Clicked())">結果をコピー</button>

<hr />

<ul>
    <li>本アプリはWebAssemblyをサポートするブラウザで動作します。つまり、IE以外には対応しています。</li>
    <li>パスワードはWebブラウザ上で生成しているため、生成したパスワードがインターネット上に流れることはありません。アプリケーションのロード後は、オフラインでもパスワード生成が可能です。</li>
    <li>乱数生成には暗号乱数ジェネレータのSystem.Security.Cryptography.RandomNumberGeneratorを使用しており、ランダム性は厳密です。</li>
    <li>ランダムバイトから文字への変換時、ランダムバイト値 ÷ 使用可能文字数の剰余を使用可能文字配列のインデックスとして使用しています。
    ナイーブな実装だと使用可能文字数が256の約数でない場合に出現文字にわずかな偏りが生じますが、本アプリの実装では使用可能文字数Lの最大整数倍（Lk &lt; 256）を超えるランダムバイト値は除外しているため、そのような偏りは生じません。</li>
</ul>
